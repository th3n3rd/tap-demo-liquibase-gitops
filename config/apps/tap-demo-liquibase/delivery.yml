apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: tap-demo-liquibase
  annotations:
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: tap-demo-liquibase
    apps.tanzu.vmware.com/has-db-migrations: "true"
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/component: run
    carto.run/workload-name: tap-demo-liquibase
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/min-scale: "1"
        boot.spring.io/version: 3.1.2
        conventions.carto.run/applied-conventions: |-
          appliveview-sample/app-live-view-appflavour-check
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/spring-boot
          spring-boot-convention/spring-boot-graceful-shutdown
          spring-boot-convention/spring-boot-web
          spring-boot-convention/spring-boot-actuator
          spring-boot-convention/spring-boot-actuator-probes
          spring-boot-convention/app-live-view-appflavour-check
          spring-boot-convention/app-live-view-connector-boot
          spring-boot-convention/app-live-view-appflavours-boot
          spring-boot-convention/service-intent-postgres
        developer.conventions/target-containers: workload
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"annotations":{},"labels":{"app.kubernetes.io/part-of":"tap-demo-liquibase","apps.tanzu.vmware.com/has-db-migrations":"true","apps.tanzu.vmware.com/workload-type":"web"},"name":"tap-demo-liquibase","namespace":"apps"},"spec":{"build":{"env":[{"name":"BP_JVM_VERSION","value":"17"}]},"env":[{"name":"spring.liquibase.enabled","value":"false"}],"params":[{"name":"annotations","value":{"autoscaling.knative.dev/min-scale":"1"}},{"name":"gitops_server_address","value":"ssh://git@github.com"},{"name":"gitops_repository_owner","value":"th3n3rd"},{"name":"gitops_repository_name","value":"tap-demo-liquibase-gitops"},{"name":"gitops_branch","value":"dev"},{"name":"gitops_commit_message","value":"Update tap-demo-liquibase config"},{"name":"gitops_ssh_secret","value":"tap-gitops-ssh-auth"}],"serviceClaims":[{"name":"db","ref":{"apiVersion":"services.apps.tanzu.vmware.com/v1alpha1","kind":"ClassClaim","name":"tap-demo-liquibase-db"}}],"source":{"git":{"ref":{"branch":"main"},"url":"ssh://git@github.com/th3n3rd/tap-demo-liquibase.git"}}}}
        services.conventions.carto.run/postgres: postgresql/42.6.0
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: tap-demo-liquibase
        apps.tanzu.vmware.com/auto-configure-actuators: "false"
        apps.tanzu.vmware.com/has-db-migrations: "true"
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: tap-demo-liquibase
        conventions.carto.run/framework: spring-boot
        services.conventions.carto.run/postgres: workload
        tanzu.app.live.view: "true"
        tanzu.app.live.view.application.actuator.path: actuator
        tanzu.app.live.view.application.actuator.port: "8080"
        tanzu.app.live.view.application.flavours: spring-boot
        tanzu.app.live.view.application.name: tap-demo-liquibase
    spec:
      containers:
      - env:
        - name: spring.liquibase.enabled
          value: "false"
        - name: JAVA_TOOL_OPTIONS
          value: -Dmanagement.endpoint.health.probes.add-additional-paths="true" -Dmanagement.health.probes.enabled="true" -Dserver.port="8080" -Dserver.shutdown.grace-period="24s"
        image: us-central1-docker.pkg.dev/tap-sandbox-dev/tap-huge-lark/tap-demo-liquibase-apps@sha256:0a5813a76ab08c59ef3d89f0a39933296241ca5e99769fb52e6f0d3f48af0eea
        livenessProbe:
          httpGet:
            path: /livez
            port: 8080
            scheme: HTTP
        name: workload
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
        resources: {}
        securityContext:
          runAsUser: 1000
      initContainers:
      - args:
        - |
          echo "changeLogFile: /liquibase/changelog/db.changelog-master.yaml" >> /tmp/liquibase.properties
          echo "username: $(cat /bindings/db/username)" >> /tmp/liquibase.properties
          echo "password: $(cat /bindings/db/password)" >> /tmp/liquibase.properties
          echo "url: jdbc:$(cat /bindings/db/type)://$(cat /bindings/db/host):$(cat /bindings/db/port)/$(cat /bindings/db/database)" >> /tmp/liquibase.properties
          liquibase update --defaultsFile=/tmp/liquibase.properties
        command:
        - /bin/sh
        - -c
        image: index.docker.io/liquibase/liquibase@sha256:402dd9d122a0ce1b5d6e165492c5d45d06694dc5be64c0d36fdb219f783d7551
        name: db-migrations
        resources: {}
        volumeMounts:
        - mountPath: /liquibase/changelog
          name: liquibase-config
          readOnly: true
      serviceAccountName: default
      volumes:
      - configMap:
          name: tap-demo-liquibase-liquibase-config
        name: liquibase-config

